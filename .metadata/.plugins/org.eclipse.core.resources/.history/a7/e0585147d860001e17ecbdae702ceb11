package com.movie;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.Instant;
import java.util.ArrayList;
import java.util.List;

public class Movie {

	private long id;
	private String title;
	private String genre;
	
	private static final File file = new File("movies.txt");
	
	public Movie(long id, String title, String genre) {
		this.id = id;
		this.title = title;
		this.genre = genre;
	}
	
	public Movie(String title, String genre) {
		this(Instant.now().getEpochSecond(), title, genre);
	}

	public static List<Movie> findAll() throws IOException{
		List<Movie> movies = new ArrayList<Movie>();
		BufferedReader reader = new BufferedReader(new FileReader(file));
		String line = null;
		
		while( (line = reader.readLine()) != null ) { //null값이면 끝남
			String[] temp = line.split(",");
			Movie movie = new Movie(Long.parseLong(temp[0]), temp[1], temp[2]);
			movies.add(movie);
		}
		reader.close();		
		return movies;
		//buffer : buffer가 잇으면 java랑 file이 경로 오가면서 파일 인풋 아웃풋하는데 buffer가 잇으면 한번에 가져와서 속도 향상이 빨랐던거같은데 잘모르겠군 
		/* Scanner와 달리 BufferedReader는 개행문자만 경계로 인식하고 입력받은 데이터가 String으로 고정된다. 그렇기 때문에 따로 데이터를 가공해야하는 경우가 많다. 하지만 Scanner보다 속도가 빠르다!
		 * BufferedReader를 통해 읽어온 데이터는 개행문자 단위(Line 단위)로 나누어진다
		 * */
	}
	
	@Override
	public String toString() {
		return String.format("[%d] : %s(%s)", id, title, genre);
	}

	public void save() {
		try {
			FileWriter fw = new FileWriter(file,true);
//			FileWriter fw = new FileWriter(file); 이대로 하면 입력된 애들만 저장되어서 영화등록한 파일 하나만 저장되고 기존에 있던게 사라지게 됨 그리고 file, true하면 안되고 file,true로 해야 내가 생각한대로 저장이 되네.. 왜일까 띄어쓰기가 무슨차이인걸까...
			fw.write(this.toFileString() + "\n"); //저장하고 줄바꿈 한다는 의미
			fw.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private String toFileString() {
		return String.format("%d,%s,%s", id, title, genre);
	}
}
