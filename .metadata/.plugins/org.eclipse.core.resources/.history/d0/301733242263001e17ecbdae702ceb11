package ex01;

import java.util.Arrays;
import java.util.stream.IntStream;

public class FristStremaExam {
	public static void main(String[] args) {
		int[] ar = {1,2,3,4,5};
		IntStream stm1 = Arrays.stream(ar);
		IntStream stm2 = stm1.filter( n -> n%2==1 );
//		12345를 전달받아서 나머지가 0이면 (false)면 통과되지 않음
//		따라서 stm2에는 1,3,5만 들어잇음
//		int sum = stm2.sum();
		int sum = (int) stm2.count(); 
		System.out.println(sum); // 1+3+5 = 9
		
		Arrays.stream(ar).filter( n -> n%== 0).sum();
		
		
		
		
		/*		매개변수로 (IntPredicate predicate)를 받음 -> true false를 반환해주는 자바의 함수형 인터페이스 
 * 람다식 : 함수형 인터페이스를 구현함
 * 함수형 인터페이스			Descripter		Method
 * Predicate			T -> boolean	boolean test(T t)
 * => Returns a stream consisting of the elements of this stream that matchthe given predicate. 
		This is an intermediateoperation.
		Parameters:predicate a non-interfering, statelesspredicate to apply to each element to determine if itshould be includedReturns:the new stream
		*/
	}
}
